<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>asp.net core 隨手筆記 - 跟 vue 聯手匯出 Excel (●・ω・)b</title>
      <link href="/2019/02/20/asp-net-core-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E8%B7%9F-vue-%E8%81%AF%E6%89%8B%E5%8C%AF%E5%87%BA-Excel-%E2%97%8F%E3%83%BB%CF%89%E3%83%BB-b/"/>
      <url>/2019/02/20/asp-net-core-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E8%B7%9F-vue-%E8%81%AF%E6%89%8B%E5%8C%AF%E5%87%BA-Excel-%E2%97%8F%E3%83%BB%CF%89%E3%83%BB-b/</url>
      
        <content type="html"><![CDATA[<h2 id="安裝-NuGet-套件"><a href="#安裝-NuGet-套件" class="headerlink" title="安裝 NuGet 套件"></a><strong>安裝 NuGet 套件</strong></h2><p>首先，先幫 <strong>.net core</strong> 安裝 Excel 所需套件 <strong>DocumentFormat.OpenXml</strong><br>打開 nuget 套件管理介面，搜尋 <strong>DocumentFormat.OpenXml</strong><br>這邊需要安裝兩個基本套件</p><ol><li>DocumentFormat.OpenXml</li><li>DocumentFormat.OpenXml.DotNet.Core<br><img src="https://imgur.com/qMdJv3I.png" alt=""></li></ol><h2 id="匯出-Excel"><a href="#匯出-Excel" class="headerlink" title="匯出 Excel"></a><strong>匯出 Excel</strong></h2><p>範例中將會使用 <strong>FileStreamResult</strong> 回傳 Excel 資料串流<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">[HttpGet]</span><br><span class="line">public FileStreamResult Get()</span><br><span class="line">&#123;</span><br><span class="line">#region 設定 Excel 要寫入的資料</span><br><span class="line"></span><br><span class="line">string[][] datas = new string[][]</span><br><span class="line">&#123;</span><br><span class="line">new string[]&#123;&quot;一年甲班&quot;,&quot;王小明&quot; &#125;,</span><br><span class="line">new string[]&#123;&quot;一年乙班&quot;,&quot;孫小美&quot; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">#endregion 設定 Excel 要寫入的資料</span><br><span class="line"></span><br><span class="line">#region 建立 Excel 資料串流</span><br><span class="line"></span><br><span class="line">MemoryStream memoryStream = new MemoryStream();</span><br><span class="line">using (var document = SpreadsheetDocument.Create(memoryStream, SpreadsheetDocumentType.Workbook))</span><br><span class="line">&#123;</span><br><span class="line">#region 建立 Excel 檔案</span><br><span class="line"></span><br><span class="line">WorkbookPart workbookPart = document.AddWorkbookPart();</span><br><span class="line">workbookPart.Workbook = new Workbook();</span><br><span class="line"></span><br><span class="line">WorksheetPart worksheetPart = workbookPart.AddNewPart&lt;WorksheetPart&gt;();</span><br><span class="line">worksheetPart.Worksheet = new Worksheet(new SheetData());</span><br><span class="line"></span><br><span class="line">Sheets sheets = workbookPart.Workbook.AppendChild(new Sheets());</span><br><span class="line">sheets.Append(new Sheet()</span><br><span class="line">&#123;</span><br><span class="line">Id = workbookPart.GetIdOfPart(worksheetPart),</span><br><span class="line">SheetId = 1,</span><br><span class="line">Name = &quot;Sheet Name&quot;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">#endregion 建立 Excel 檔案</span><br><span class="line"></span><br><span class="line">#region 寫入 Excel 資料</span><br><span class="line"></span><br><span class="line">SheetData sheetData = worksheetPart.Worksheet.GetFirstChild&lt;SheetData&gt;();</span><br><span class="line">//// 建立欄位</span><br><span class="line">Row fieldRow = new Row();</span><br><span class="line">fieldRow.Append(</span><br><span class="line">new Cell() &#123; CellValue = new CellValue(&quot;Class&quot;), DataType = CellValues.String &#125;,</span><br><span class="line">new Cell() &#123; CellValue = new CellValue(&quot;Student&quot;), DataType = CellValues.String &#125;</span><br><span class="line">);</span><br><span class="line">sheetData.AppendChild(fieldRow);</span><br><span class="line">//// 輸入資料</span><br><span class="line">foreach (string[] data in datas)</span><br><span class="line">&#123;</span><br><span class="line">Row row = new Row();</span><br><span class="line">row.Append(</span><br><span class="line">new Cell() &#123; CellValue = new CellValue(data[0]), DataType = CellValues.String &#125;,</span><br><span class="line">new Cell() &#123; CellValue = new CellValue(data[1]), DataType = CellValues.String &#125;</span><br><span class="line">);</span><br><span class="line">sheetData.AppendChild(row);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#endregion 寫入 Excel 資料</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#endregion 建立 Excel 資料串流</span><br><span class="line"></span><br><span class="line">#region 回傳資料串流</span><br><span class="line"></span><br><span class="line">memoryStream.Seek(0, SeekOrigin.Begin);</span><br><span class="line">return new FileStreamResult(memoryStream, &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;);</span><br><span class="line"></span><br><span class="line">#endregion 回傳資料串流</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>執行 api 後，就可以下載 Excel 了 (○｀･Д･´)9</p><h2 id="vue-axios-blob-聯手出擊-額外補充"><a href="#vue-axios-blob-聯手出擊-額外補充" class="headerlink" title="vue-axios-blob 聯手出擊 (額外補充)"></a><strong>vue-axios-blob 聯手出擊 (額外補充)</strong></h2><p>因為專案因素<br>塔克使用 <strong>vue</strong> 當作前端架構<br>結果在使用 <strong>post</strong> api 的時候<br>一直無法下載 Excel<br>後來餵狗之後才發現，原來 <strong>ajax</strong> 不支援文件回應部分<br>只能使用原生的 <strong>\&lt;form></strong> 提交表單或是尋求其他的方式<br>所以再次餵狗後，決定使用 <strong>axios + blob</strong> 的方式來下載 Excel</p><h3 id="安裝-axios-blob"><a href="#安裝-axios-blob" class="headerlink" title="安裝 axios + blob"></a><strong>安裝 axios + blob</strong></h3><p><strong>axios</strong> 與 <strong>blob</strong> 的詳細解說再請大家餵狗，以避免誤導大家 :;(∩´﹏`∩);:<br>這邊就直接上使用方法了 !</p><h5 id="安裝-axios"><a href="#安裝-axios" class="headerlink" title="安裝 axios"></a><strong>安裝 axios</strong></h5><p>打開 <strong>vscode</strong> 終端機，輸入以下代碼，安裝 <strong>axios</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure></p><p>安裝完後，輸入以下代碼，引入 axios 相關插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import axios from &apos;axios&apos;</span><br><span class="line">import VueAxios from &apos;vue-axios&apos;</span><br><span class="line"></span><br><span class="line">Vue.use(VueAxios，axios)</span><br></pre></td></tr></table></figure></p><p><em>額外小補充<br><strong>VueAxios</strong> 需在 <strong>axios</strong> 前先引入</em></p><h5 id="安裝-blob"><a href="#安裝-blob" class="headerlink" title="安裝 blob"></a><strong>安裝 blob</strong></h5><p>接著輸入以下代碼，安裝 <strong>blob</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install blob</span><br></pre></td></tr></table></figure></p><h2 id="vue-axios-blob-範例使用"><a href="#vue-axios-blob-範例使用" class="headerlink" title="vue-axios-blob 範例使用"></a><strong>vue-axios-blob 範例使用</strong></h2><p>在 api request post 的部分，輸入以下代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">this.axios</span><br><span class="line">  .post(&quot;Your post url&quot;, &quot;Your post data&quot;, &#123;</span><br><span class="line">    headers: &#123; &quot;Content-Type&quot;: &quot;application/json&quot; &#125;, //// 可根據傳遞資料的類型更換</span><br><span class="line">    responseType: &quot;blob&quot;</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(respone =&gt; &#123;</span><br><span class="line">    const blob = new Blob([respone.data], &#123; type: respone.data.type &#125;); //// 建立 blob</span><br><span class="line">    const downloadElement = document.createElement(&quot;a&quot;); //// 建立 &lt;a&gt; 元素，用以連結 blob url</span><br><span class="line">    const href = window.URL.createObjectURL(blob); //// 產生 blob url</span><br><span class="line">    downloadElement.href = href; //// 放置 blob url</span><br><span class="line">    downloadElement.download = &quot;fileNmae.xlsx&quot;; //// 下載檔案與檔案設置</span><br><span class="line">    document.body.appendChild(downloadElement); //// 生成 &lt;a&gt; 元素</span><br><span class="line">    downloadElement.click(); //// 執行下載</span><br><span class="line">    document.body.removeChild(downloadElement); //// 下載完成，移除 &lt;a&gt; 元素</span><br><span class="line">    window.URL.revokeObjectURL(href); //// 釋放 blob 對象</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure></p><p>執行 api 後，就可以讓 <strong>vue</strong> 利用 <strong>axios + blob</strong> 下載 Excel 了 (○｀･Д･´)9</p><p><strong>參考</strong><br><a href="http://api.jquery.com/jquery.ajax/" target="_blank" rel="noopener">jQuery ajax</a><br><a href="https://github.com/axios/axios" target="_blank" rel="noopener">axios github</a><br><a href="https://blog.johnwu.cc/article/asp-net-core-export-to-excel.html" target="_blank" rel="noopener">ASP.NET Core 教學 - Open XML SDK 匯出 Excel</a><br><a href="https://www.jianshu.com/p/b22d03dfe006" target="_blank" rel="noopener">Vue亂搞系列之axios發起表單請求</a></p>]]></content>
      
      
      <categories>
          
          <category> 學習日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> asp.net core </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue 隨手筆記 - IIS 架設 vue 站台</title>
      <link href="/2019/02/14/vue-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-IIS-%E6%9E%B6%E8%A8%AD-vue-%E7%AB%99%E5%8F%B0/"/>
      <url>/2019/02/14/vue-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-IIS-%E6%9E%B6%E8%A8%AD-vue-%E7%AB%99%E5%8F%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="建置網頁"><a href="#建置網頁" class="headerlink" title="建置網頁"></a><strong>建置網頁</strong></h2><p>輸入以下指令，建置網頁<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure></p><p>專案會產生 <strong>dist</strong> 資料夾<br>我們將會利用 <strong>dist</strong> 資料夾來掛載 vue 的網站內容<br><img src="https://imgur.com/mHpF9fh.png" alt=""></p><h2 id="架設-vue-站台"><a href="#架設-vue-站台" class="headerlink" title="架設 vue 站台"></a><strong>架設 vue 站台</strong></h2><p>於 <strong>IIS</strong> 設定 vue 站台<br>注意的是，實體路徑需指定到剛剛佈署產生的 <strong>dist</strong> 資料夾<br><img src="https://imgur.com/vpZ5ukd.png" alt=""></p><p>設定完後，即可測試 vue 站台是否架設成功 (･ω･)b</p><h2 id="在-IIS-中配置-vue-router"><a href="#在-IIS-中配置-vue-router" class="headerlink" title="在 IIS 中配置 vue-router"></a><strong>在 IIS 中配置 vue-router</strong></h2><p>當網站有一定規模時，將會使用到 <strong>vue-router</strong> 來控制網頁路由<br>而在 <strong>IIS</strong> 中，如果要使用 <strong>vue-router</strong> 的話，需先準備以下步驟</p><ol><li>安裝 IIS UrlRewrite</li><li>配置 web.config</li></ol><h4 id="安裝-IIS-UrlRewrite"><a href="#安裝-IIS-UrlRewrite" class="headerlink" title="安裝 IIS UrlRewrite"></a><strong>安裝 IIS UrlRewrite</strong></h4><p>於 <a href="https://www.iis.net/downloads/microsoft/url-rewrite" target="_blank" rel="noopener">IIS UrlRewrite 下載網頁</a> 下載 <strong>IIS UrlRewrite</strong> 安裝檔<br><img src="https://imgur.com/UiXHQp4.png" alt=""></p><h4 id="配置-web-config"><a href="#配置-web-config" class="headerlink" title="配置 web.config"></a><strong>配置 web.config</strong></h4><p>建置 <strong>web.config</strong> 檔案，其內容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;system.webServer&gt;</span><br><span class="line">    &lt;rewrite&gt;</span><br><span class="line">      &lt;rules&gt;</span><br><span class="line">        &lt;rule name=&quot;Handle History Mode and custom 404/500&quot; stopProcessing=&quot;true&quot;&gt;</span><br><span class="line">          &lt;match url=&quot;(.*)&quot; /&gt;</span><br><span class="line">          &lt;conditions logicalGrouping=&quot;MatchAll&quot;&gt;</span><br><span class="line">            &lt;add input=&quot;&#123;REQUEST_FILENAME&#125;&quot; matchType=&quot;IsFile&quot; negate=&quot;true&quot; /&gt;</span><br><span class="line">            &lt;add input=&quot;&#123;REQUEST_FILENAME&#125;&quot; matchType=&quot;IsDirectory&quot; negate=&quot;true&quot; /&gt;</span><br><span class="line">          &lt;/conditions&gt;</span><br><span class="line">          &lt;action type=&quot;Rewrite&quot; url=&quot;/&quot; /&gt;</span><br><span class="line">        &lt;/rule&gt;</span><br><span class="line">      &lt;/rules&gt;</span><br><span class="line">    &lt;/rewrite&gt;</span><br><span class="line">  &lt;/system.webServer&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></p><p>這邊要注意的是<br>因為 <strong>web.config</strong> 是為了讓 <strong>IIS</strong> 能夠配置 <strong>vue-router</strong><br>所以檔案需產生到 <strong>dist</strong> 資料夾中 (<strong>IIS</strong> 實體路徑是指到 <strong>dist</strong> 資料夾)<br>但問題來了 (ʘᗩʘ’)<br>因為每次建置網頁，<strong>dist</strong> 資料夾就會重新產生<br>這樣的話，要一直重新新增 <strong>web.config</strong> 到 <strong>dist</strong> 資料夾中，不是很麻煩嗎?! (´д｀)<br>因此，我們把 <strong>web.config</strong> 新增到 <strong>public</strong> 資料夾中<br><img src="https://imgur.com/8HNca4i.png" alt=""></p><p>這樣一來，在每次建置的時候，就會自動將 <strong>web.config</strong> 產生至 <strong>dist</strong> 資料夾中了 (ﾉﾟ▽ﾟ)ﾉ<br><img src="https://imgur.com/5g1OxmZ.png" alt=""></p><p>設定完後，即可測試 vue 站台是否能使用 <strong>vue-router</strong>  (･ω･)b</p><p><strong>參考</strong><br><a href="https://router.vuejs.org/guide/essentials/history-mode.html#example-server-configurations" target="_blank" rel="noopener">vue-router 官方文擋</a> </p>]]></content>
      
      
      <categories>
          
          <category> 學習日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>asp.net core 隨手筆記 - 使用 IIS 架設 .net core API 站台</title>
      <link href="/2019/02/12/asp-net-core-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E4%BD%BF%E7%94%A8-IIS-%E6%9E%B6%E8%A8%AD-net-core-API-%E7%AB%99%E5%8F%B0/"/>
      <url>/2019/02/12/asp-net-core-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E4%BD%BF%E7%94%A8-IIS-%E6%9E%B6%E8%A8%AD-net-core-API-%E7%AB%99%E5%8F%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="安裝-NET-Core-裝載套件組合"><a href="#安裝-NET-Core-裝載套件組合" class="headerlink" title="安裝 .NET Core 裝載套件組合"></a><strong>安裝 .NET Core 裝載套件組合</strong></h2><p>於<a href="https://docs.microsoft.com/zh-tw/aspnet/core/host-and-deploy/iis/?view=aspnetcore-2.2#install-the-net-core-hosting-bundle" target="_blank" rel="noopener">官網</a>下載 .net Core 裝載套件組合<br><img src="https://imgur.com/NCQTKwl.png" alt=""></p><p>安裝套件<br><img src="https://imgur.com/R4GYD2g.png" alt=""></p><h2 id="架設-net-core-API-站台"><a href="#架設-net-core-API-站台" class="headerlink" title="架設 .net core API 站台"></a><strong>架設 .net core API 站台</strong></h2><p>於 <strong>IIS</strong> 設定 API 站台<br>這邊要注意幾個要點</p><ol><li><p>需使用 <strong>發行</strong> 發佈檔案<br><img src="https://imgur.com/PmudzhH.png" alt=""></p></li><li><p>實體路徑須設定至 <strong>publish</strong> 位置<br><img src="https://imgur.com/oHQKZmg.png" alt=""></p></li><li><p>於 <strong>hosts</strong> config 中加入本地 domain <code>127.0.0.1 www.appnetcore.test</code><br>(host config 可於 <strong>C:\Windows\System32\drivers\etc</strong> 中找到)<br><img src="https://imgur.com/ZuOucG9.png" alt=""></p></li></ol><p>以上都設定完後，即可測試 api 是否成功 (*ゝ∀･)v</p>]]></content>
      
      
      <categories>
          
          <category> 學習日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> asp.net core </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python 隨手筆記 - 把 Django 丟到雲端去 (╯°▽°)╯</title>
      <link href="/2018/12/04/Python-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E6%8A%8A-Django-%E4%B8%9F%E5%88%B0%E9%9B%B2%E7%AB%AF%E5%8E%BB-%E2%95%AF%C2%B0%E2%96%BD%C2%B0-%E2%95%AF/"/>
      <url>/2018/12/04/Python-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E6%8A%8A-Django-%E4%B8%9F%E5%88%B0%E9%9B%B2%E7%AB%AF%E5%8E%BB-%E2%95%AF%C2%B0%E2%96%BD%C2%B0-%E2%95%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="找個雲端好夥伴-Google-Cloud-Platform-GCP"><a href="#找個雲端好夥伴-Google-Cloud-Platform-GCP" class="headerlink" title="找個雲端好夥伴 - Google Cloud Platform (GCP)"></a><strong>找個雲端好夥伴 - Google Cloud Platform (GCP)</strong></h2><p>把 Django 部屬到雲端去有很多方式<br>塔克這邊選擇用 <strong>GCP</strong> 中的 <strong>App Engine</strong> 來部屬 Django<br>在開始部屬 Django 步驟之前<br>有幾點需事先準備好</p><ol><li>建立 GCP 帳號</li><li><a href="https://cloud.google.com/sdk/" target="_blank" rel="noopener">下載 GCP 的專用套件 - Cloud SDK</a></li><li>設定 GAE</li></ol><h3 id="建立-GCP-帳號"><a href="#建立-GCP-帳號" class="headerlink" title="建立 GCP 帳號"></a><strong>建立 GCP 帳號</strong></h3><p>估狗上已經有很多教學範例<br>這邊就不贅述了<br>再請大家先餵狗一下唷 (･ω･)</p><p><em>額外小補充<br>真找不到教學的朋友，可以參考這位大大的教學唷<br><a href="http://kuanzi9487.blogspot.com/2017/09/gcpgoogle-cloud-platformserverserver.html" target="_blank" rel="noopener">GCP_如何用Google Cloud Platform創建Server_帳號申請、Server建立</a></em></p><h3 id="下載-GCP-的專用套件"><a href="#下載-GCP-的專用套件" class="headerlink" title="下載 GCP 的專用套件"></a><strong>下載 GCP 的專用套件</strong></h3><p>進入 <a href="https://cloud.google.com/sdk/" target="_blank" rel="noopener">Cloud SDK 下載頁面</a><br>選擇系統版本下載並安裝<br>安裝的部分也是毫無懸念地，一路給它下一步、下一步安裝到底<br><img src="https://imgur.com/tdtfAb3.png" alt=""></p><p>安裝好後，系統會自動開啟 <strong>Google Cloud SDK Shell</strong><br>(若沒有自動開啟，可以自行開啟 <strong>Google Cloud SDK Shell</strong>)<br><img src="https://imgur.com/3FFOPKO.png" alt=""></p><p>如果之前有像塔克一樣有先設定過的話<br>會像畫面中顯示兩個選項</p><ol><li>採用預設 config</li><li>建立新的 config</li></ol><p>如果之前沒有設定過的話<br>再請輸入以下指令，初始化 gcloud 設定<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcloud init</span><br></pre></td></tr></table></figure></p><p>這邊塔克都是延續上一次設定<br><strong>帳號選擇</strong><br><img src="https://imgur.com/PIXYAkW.png" alt=""></p><p><strong>專案ID選擇</strong><br><img src="https://imgur.com/XTPa7Sb.png" alt=""></p><p><strong>是否選擇區域</strong><br><img src="https://imgur.com/VZkfjaD.png" alt=""></p><p><strong>選擇亞洲區域 (這邊請選擇適合自己的區域)</strong><br><img src="https://imgur.com/sotp8WE.png" alt=""></p><p>設定好囉，就可以開始使用 <strong>Google Cloud SDK Shell</strong> 來上傳 Django 到 <strong>GAE</strong> 了 !</p><h3 id="設定-GAE"><a href="#設定-GAE" class="headerlink" title="設定 GAE"></a><strong>設定 GAE</strong></h3><p>回到 GCP 的網頁<br>點擊 <strong>主選單</strong>，開啟下拉選單，選擇 <strong>App Engine</strong>，設定部屬環境<br><img src="https://imgur.com/IppTm98.png" alt=""></p><p>接著開啟語言選擇<br><img src="https://imgur.com/8CNZE7F.png" alt=""></p><p>我們這邊選擇 Python 語言<br><img src="https://imgur.com/Y0wetxP.png" alt=""></p><p>選擇一個適合的區域<br><img src="https://imgur.com/m0yoU48.png" alt=""></p><p>完成設定後，GCP 會詢問要不要進入教學課程，有興趣的朋友可以看一下唷 !<br><img src="https://imgur.com/EKtaFx6.png" alt=""></p><h2 id="GOGO-部屬-Django-到雲端去"><a href="#GOGO-部屬-Django-到雲端去" class="headerlink" title="GOGO ! 部屬 Django 到雲端去 !!"></a><strong>GOGO ! 部屬 Django 到雲端去 !!</strong></h2><p>在開始部屬到雲端前<br>請大家先準備好自己的 Django 專案<br>如果還沒準備好或不知道怎麼建立 Django 專案的<br>可以參考塔克之前寫的 <a href="https://happyhand.github.io/2018/11/28/Python-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E7%94%A8-Django-%E4%BD%9C%E5%80%8B%E7%B6%B2%E9%A0%81%E5%90%A7/">Python 隨手筆記 - 用 Django 作個網頁吧 !</a> 文章做練習</p><h3 id="加入-app-yaml"><a href="#加入-app-yaml" class="headerlink" title="加入 app.yaml"></a><strong>加入 app.yaml</strong></h3><p>建立好基本專案後，也確定本地端伺服器 (<strong><a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a></strong>) 可以正常運行後<br>在建立的專案底下，新增 app.yaml 檔案<br>並輸入以下代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">runtime: python37</span><br><span class="line"></span><br><span class="line">handlers:</span><br><span class="line">- url: /static</span><br><span class="line">  static_dir: static/</span><br><span class="line"></span><br><span class="line">- url: /.*</span><br><span class="line">  script: auto</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/Zb6ShmK.png" alt=""></p><p>app.yaml 的設定可以參考 <a href="https://cloud.google.com/appengine/docs/standard/python3/config/appref" target="_blank" rel="noopener">app.yaml Reference</a></p><h3 id="加入-main-py"><a href="#加入-main-py" class="headerlink" title="加入 main.py"></a><strong>加入 main.py</strong></h3><p>在建立的專案底下，新增 main.py 檔案<br>並輸入以下代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from mysite.wsgi import application</span><br><span class="line">app = application</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/eexbczx.png" alt=""></p><p>GAE 預設會依照根目錄下 <strong>main.py</strong> 檔案中的 app 變數，作為 Django 網站程式的介面</p><h3 id="修改-setting-py"><a href="#修改-setting-py" class="headerlink" title="修改 setting.py"></a><strong>修改 setting.py</strong></h3><p>打開 <strong>yourprojectname/setting.py</strong> (塔克範例是 <strong>Webapi/setting.py</strong>)<br>先進入到<br>修改 <strong>ALLOWED_HOSTS</strong> 設定<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALLOWED_HOSTS = [&apos;*&apos;]</span><br></pre></td></tr></table></figure></p><p>新增 <strong>STATIC_ROOT</strong> 設定，以便建立靜態檔案<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STATIC_ROOT = &apos;static&apos;</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/WoySscN.png" alt=""><br>.<br>.<br>.<br><img src="https://imgur.com/S6bhVWk.png" alt=""></p><h3 id="以-Google-Cloud-SDK-Shell-執行，進入虛擬環境"><a href="#以-Google-Cloud-SDK-Shell-執行，進入虛擬環境" class="headerlink" title="以 Google Cloud SDK Shell 執行，進入虛擬環境"></a><strong>以 Google Cloud SDK Shell 執行，進入虛擬環境</strong></h3><p>打開 <strong>Google Cloud SDK Shell</strong><br>依專案設定進入虛擬環境 (以塔克的範例是 <strong>~/venv/Scripts/activate</strong>)<br>並將路徑指定到專案下 (以塔克的範例是 <strong>~/Django/Webapi</strong>)</p><h3 id="設定資料庫"><a href="#設定資料庫" class="headerlink" title="設定資料庫"></a><strong>設定資料庫</strong></h3><p>若想看看在專案中有哪些資料有新增或異動過的話<br>可以在 <strong>Google Cloud SDK Shell</strong> 中，輸入以下代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations</span><br></pre></td></tr></table></figure></p><p>接著輸入以下代碼，以初始化或更新設定資料庫<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/argVuot.png" alt=""></p><h3 id="編制靜態檔案"><a href="#編制靜態檔案" class="headerlink" title="編制靜態檔案"></a><strong>編制靜態檔案</strong></h3><p>繼續在 <strong>Google Cloud SDK Shell</strong> 中<br>輸入以下代碼編制靜態檔案<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py collectstatic</span><br></pre></td></tr></table></figure></p><p>這個指令會根據 settings.py 中的 STATIC_ROOT 的值來編製<br>同時 app.yaml 也指定 /static 對應的靜態檔案目錄，讓 GAE 來服務靜態檔案<br><img src="https://imgur.com/tB4z5oi.png" alt=""></p><h3 id="測試本地伺服器"><a href="#測試本地伺服器" class="headerlink" title="測試本地伺服器"></a><strong>測試本地伺服器</strong></h3><p>繼續在 <strong>Google Cloud SDK Shell</strong> 中，輸入以下代碼測試網站是否正常<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure></p><p>輸入網址 <strong><a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a></strong> ，成功後將會看到 Django 的歡迎頁面</p><h3 id="建立-requirements-txt"><a href="#建立-requirements-txt" class="headerlink" title="建立 requirements.txt"></a><strong>建立 requirements.txt</strong></h3><p>繼續在 <strong>Google Cloud SDK Shell</strong> 中，輸入以下代碼建立 <strong>requirements.txt</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure></p><p>requirements.txt 將會告訴 GAE 我們需要用到那些應用程式<br>如果沒有這個檔案的話，網頁會發生 502 錯誤唷 !</p><p><em>額外小補充<br>如果有朋友像塔克一樣習慣用 <strong>VSCode</strong> 下指令的話<br>在這個步驟強烈建議使用 <strong>Google Cloud SDK Shell</strong> 來建立 <strong>requirements.txt</strong><br>或者是自己手動建立 txt 檔，並輸入相關代碼<br>因為用 <strong>VSCode</strong> 輸入指令的話，會造成 GAE 無法辨識 <strong>requirements.txt</strong><br>導致網站無法 deploy</em></p><h3 id="往雲端丟丟丟-ﾉ≧∇≦-ﾉ"><a href="#往雲端丟丟丟-ﾉ≧∇≦-ﾉ" class="headerlink" title="往雲端丟丟丟 (ﾉ≧∇≦)ﾉ"></a><strong>往雲端丟丟丟 (ﾉ≧∇≦)ﾉ</strong></h3><p>繼續在 <strong>Google Cloud SDK Shell</strong> 中，輸入以下代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcloud app deploy</span><br></pre></td></tr></table></figure></p><p>這時候系統會顯示要上傳得相關設定是否正確<br><img src="https://imgur.com/ls6eFK4.png" alt=""></p><p>檢視後，若沒問題，就可以正式上傳<br>成功上傳後，可以直接從 <strong>Google Cloud SDK Shell</strong> 中，輸入以下代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcloud app browse</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/hXLcCwu.png" alt=""></p><p>或是直接開啟網頁 <strong><a href="http://yourprojectid.appspot.com" target="_blank" rel="noopener">http://yourprojectid.appspot.com</a></strong><br>沒問題的話，就可以看到 Django 跟你 say hello 囉 !</p><p><strong>參考</strong><br><a href="http://kuanzi9487.blogspot.com/2017/09/gcpgoogle-cloud-platformserverserver.html" target="_blank" rel="noopener">GCP_如何用Google Cloud Platform創建Server_帳號申請、Server建立</a><br><a href="https://blog.uccloud.com.tw/2018/10/28/%E9%83%A8%E7%BD%B2-django-2-%E8%87%B3-app-engine-2nd-%E6%A8%99%E6%BA%96%E7%92%B0%E5%A2%83%E6%95%99%E5%AD%B8/" target="_blank" rel="noopener">部署 Django 2 至 Google App Engine 第二代標準環境教學</a><br><a href="https://cloud.google.com/appengine/docs/standard/python3/config/appref" target="_blank" rel="noopener">app.yaml Reference</a></p>]]></content>
      
      
      <categories>
          
          <category> 學習日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo 隨手筆記 - 請 Google 讓 Blog 發光發熱吧 !</title>
      <link href="/2018/11/29/Hexo-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E8%AB%8B-Google-%E8%AE%93-Blog-%E7%99%BC%E5%85%89%E7%99%BC%E7%86%B1%E5%90%A7/"/>
      <url>/2018/11/29/Hexo-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E8%AB%8B-Google-%E8%AE%93-Blog-%E7%99%BC%E5%85%89%E7%99%BC%E7%86%B1%E5%90%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="讓-Google-找到-Blog-（๑✧∀✧๑）"><a href="#讓-Google-找到-Blog-（๑✧∀✧๑）" class="headerlink" title="讓 Google 找到 Blog （๑✧∀✧๑）"></a><strong>讓 Google 找到 Blog</strong> （๑✧∀✧๑）</h2><p>為了讓 Google 可以更加靈活地搜尋到自己的 Blog<br>我們可以提供 <strong>Sitemap</strong> 檔案給 Google 進行讀取分析<br>這樣有助於別人可以透過 Google 搜尋到自己的 Blog<br>(以下操作方式均在 <strong>VS Code</strong> 開發環境中執行)</p><h3 id="安裝-hexo-sitemap-套件"><a href="#安裝-hexo-sitemap-套件" class="headerlink" title="安裝 hexo sitemap 套件"></a><strong>安裝 hexo sitemap 套件</strong></h3><p>首先輸入以下代碼安裝 <strong>hexo-generator-sitemap</strong> 套件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/GoTWyBb.png" alt=""></p><p>成功後，可以在 package.json 檔案中，看到剛剛新增的 <strong>hexo-generator-sitemap</strong> 套件<br><img src="https://imgur.com/zf6j6Yc.png" alt=""></p><h3 id="加入-Sitemap-路徑"><a href="#加入-Sitemap-路徑" class="headerlink" title="加入 Sitemap 路徑"></a><strong>加入 Sitemap 路徑</strong></h3><p>打開主程序中的 <strong>_config.yml</strong>，並輸入以下代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#Sitemap</span><br><span class="line">sitemap:</span><br><span class="line">    path: sitemap.xml</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/NlLx6sp.png" alt=""></p><h3 id="創建-Sitemap-檔案"><a href="#創建-Sitemap-檔案" class="headerlink" title="創建 Sitemap 檔案"></a><strong>創建 Sitemap 檔案</strong></h3><p>接著啟動本地伺服器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -p</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/BfU6ocb.png" alt=""></p><p>於網址中最後輸入 <strong>/sitemap.xml</strong><br>以塔克為例：<a href="http://localhost:4000/sitemap.xml" target="_blank" rel="noopener">http://localhost:4000/sitemap.xml</a><br>就會看到 <strong>Sitemap</strong> 檔案內容<br><img src="https://imgur.com/aqekfFR.png" alt=""></p><h3 id="向-Google-申請-Blog-Search"><a href="#向-Google-申請-Blog-Search" class="headerlink" title="向 Google 申請 Blog Search"></a><strong>向 Google 申請 Blog Search</strong></h3><p>首先打開 <a href="https://search.google.com/search-console/welcome" target="_blank" rel="noopener"><strong>Google Search Console</strong></a> (在此之前請先申辦一個 Google 帳號並登入唷 !)<br>接著把 Blog 的主頁網址輸入<br>以塔克為例：<a href="https://happyhand.github.io/">https://happyhand.github.io/</a><br><img src="https://imgur.com/TuMppsH.png" alt=""></p><p>提交後會看到 Google 請我們驗證網頁<br><img src="https://imgur.com/ehzmHGT.png" alt=""></p><p><em>額外小補充<br>是輸入主頁網址，不是剛剛的 sitemap.xml 網址唷 !!!<br>不然等等驗證會一直找不到網頁 !!!<br>不要像塔克一樣笨笨的，卡到快懷疑人生了</em> ╥﹏╥</p><h3 id="向-Google-驗證-Blog"><a href="#向-Google-驗證-Blog" class="headerlink" title="向 Google 驗證 Blog"></a><strong>向 Google 驗證 Blog</strong></h3><p>總共有5種驗證方式<br>塔克選擇以 <strong>HTML 標記</strong> 為驗證方式<br>而這個驗證方式說簡單很簡單，說麻煩也挺麻煩的 (當時塔克又差點懷疑人生了 Or2)<br>簡單是說，只要把 <strong>HTML 中繼標記</strong> (如下圖紅框) 添加到網站首頁的 &lt; head &gt; 至 &lt; body &gt; 區間中即可驗證<br><img src="https://imgur.com/VKHqAGa.png" alt=""></p><p>麻煩的是，因為 Hexo 的主題框架有很多種，偏偏每一種的添加方式又不太一樣<br>這邊塔克也是愛莫能助，只能提供塔克使用的主題 - <a href="https://github.com/Molunerfinn/hexo-theme-melody" target="_blank" rel="noopener"><strong>Melody</strong></a> 給大家做參考</p><h3 id="在-Blog-中添加-Google-HTML-標記驗證-以主題-Melody-為例"><a href="#在-Blog-中添加-Google-HTML-標記驗證-以主題-Melody-為例" class="headerlink" title="在 Blog 中添加 Google HTML 標記驗證 (以主題 - Melody 為例)"></a><strong>在 Blog 中添加 Google HTML 標記驗證 (以主題 - Melody 為例)</strong></h3><p>打開 ~/themes/Melody/layout/includes/layout.pug<br>找到 <strong>doctype html</strong> 設定<br>在 <strong>head</strong> 以及 <strong>body</strong> 中添加 <strong>HTML 中繼標記</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meta(name=&quot;google-site-verification&quot; content=&quot;85ut1Jqu7TICdlVpdg-R5Fu5dKwOj5tKHDS2-drMK7k&quot;)</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/deS99VU.png" alt=""></p><p>接著打開 ~/themes/Melody/layout/includes/slide/layout.pug<br>以相同的方式添加 <strong>HTML 中繼標記</strong><br>這邊塔克就不贅述了<br>接著 delpoy Blog，讓 Google 可以找到我們所添加的 <strong>HTML 中繼標記</strong><br>再回到 Google 驗證的頁面提交驗證<br>成功後如下圖顯示：<br><img src="https://imgur.com/Zu8lL44.png" alt=""></p><h3 id="提交-Sitemap-網頁"><a href="#提交-Sitemap-網頁" class="headerlink" title="提交 Sitemap 網頁"></a><strong>提交 Sitemap 網頁</strong></h3><p>前往資源設定頁面後<br>打開 <strong>主選單</strong>，選擇 <strong>Sitemap</strong>，進入提交畫面<br>輸入 Sitemap 網址 (就是 <strong><a href="https://yourblogurl/sitemap.xml" target="_blank" rel="noopener">https://yourblogurl/sitemap.xml</a></strong> ，通常只要輸入 <strong>sitemap.xml</strong> 就好)<br>按下提交<br><img src="https://imgur.com/B91C1Mn.png" alt=""></p><p>成功後，就等著 Google 幫我們去做網頁搜尋分析囉 (✪▽✪)y<br><img src="https://imgur.com/n8yH2MG.png" alt=""></p><p><strong>參考</strong><br><a href="https://support.google.com/webmasters/answer/156184" target="_blank" rel="noopener">Sitemap 說明</a><br><a href="https://github.com/hexojs/hexo-generator-sitemap" target="_blank" rel="noopener">Hexo Sitemap Github</a></p>]]></content>
      
      
      <categories>
          
          <category> 學習日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python 隨手筆記 - 用 Django 作個網頁吧 !</title>
      <link href="/2018/11/28/Python-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E7%94%A8-Django-%E4%BD%9C%E5%80%8B%E7%B6%B2%E9%A0%81%E5%90%A7/"/>
      <url>/2018/11/28/Python-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E7%94%A8-Django-%E4%BD%9C%E5%80%8B%E7%B6%B2%E9%A0%81%E5%90%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="工欲善其事，必先利其器"><a href="#工欲善其事，必先利其器" class="headerlink" title="工欲善其事，必先利其器 !"></a><strong>工欲善其事，必先利其器 !</strong></h2><p>在開始建立個人網頁前<br>我們先來找個合適的 IDE or 文本編輯器來編譯我們的專案<br>(專案將會延續 <a href="http://happyhand.github.io/2018/11/26/Python-隨手筆記-安裝Django/">Python 隨手筆記 - 安裝Django</a> 的設定作說明)</p><h3 id="來試試-VS-Code"><a href="#來試試-VS-Code" class="headerlink" title="來試試 VS Code"></a><strong>來試試 VS Code</strong></h3><p>在工具方面，塔克是使用 <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code</a> 來做為 Python 的文本編輯器<br>有興趣的朋友可以參考一下<br>這邊會再重新複習上一個章節 <a href="http://happyhand.github.io/2018/11/26/Python-隨手筆記-安裝Django/">Python 隨手筆記 - 安裝Django</a> 所進行的步驟<br>已經熟悉的朋友可以直接跳過，直接往下一個步驟 <a href="https://happyhand.github.io/2018/11/28/Python-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E7%94%A8-Django-%E4%BD%9C%E5%80%8B%E7%B6%B2%E9%A0%81%E5%90%A7/#%E8%AE%93%E4%BC%BA%E6%9C%8D%E5%99%A8%E8%B7%91%E8%B5%B7%E4%BE%86"><strong>讓伺服器跑起來 !</strong></a> 進行</p><h4 id="安裝-VS-Code"><a href="#安裝-VS-Code" class="headerlink" title="安裝 VS Code"></a><strong>安裝 VS Code</strong></h4><p>首先先到 <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code 官網</a> 安裝 <strong>VS Code</strong><br><img src="https://imgur.com/mBDSgJC.png" alt=""></p><p>接著以 VS Code 開啟事先建立好的 Django 資料夾<br><img src="https://imgur.com/3EpE4gd.png" alt=""></p><p>在執行 Python 相關動作前，我們先來安裝 Python 套件<br><img src="https://imgur.com/86IO6cu.png" alt=""></p><h4 id="創建虛擬環境"><a href="#創建虛擬環境" class="headerlink" title="創建虛擬環境"></a><strong>創建虛擬環境</strong></h4><p>在 VS Code 環境中打開終端機 (快捷鍵是 <strong>Ctrl+`</strong>)<br>一樣輸入創建虛擬環境的代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv yourvirtualenvironmentname</span><br></pre></td></tr></table></figure></p><p>塔克這邊的例子是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv venv</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/WGLsB7Q.png" alt=""></p><p>接著就會看到原本 Django 資料夾中，多了一個 venv 資料夾<br><img src="https://imgur.com/SlDWDuT.png" alt=""></p><p>接著我們執行 <strong>~/venv/Scripts/activate</strong>，以進入到虛擬環境中<br>這邊塔克有遇到 <strong>終端機 powershell</strong> 無法執行的問題 (如圖中的紅色提示)<br><img src="https://imgur.com/v6Dpn5H.png" alt=""></p><p>此時我們打開 powershell (記得使用<strong>管理員模式</strong>)<br>輸入以下指令，並選擇 <strong>Y</strong> 即可正常執行 <strong>~/venv/Scripts/activate</strong> 指令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/sEX1l5D.png" alt=""></p><p>成功後，前方會掛載自訂的虛擬環境名稱，如塔克所自訂的 <strong>venv</strong><br><img src="https://imgur.com/ZEQQOZQ.png" alt=""></p><h4 id="安裝-Django-並創建專案"><a href="#安裝-Django-並創建專案" class="headerlink" title="安裝 Django 並創建專案"></a><strong>安裝 Django 並創建專案</strong></h4><p>接著安裝 <strong>Django</strong> (記得輸入最新版本唷)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django==2.1.3</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/fqlxtaT.png" alt=""></p><p>完成後，輸入以下代碼創建專案<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ~\venv\Scripts\django-admin.py startproject yourprojectname</span><br></pre></td></tr></table></figure></p><p>塔克這邊的例子是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python venv\Scripts\django-admin.py startproject Webapi</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/q8KrHl9.png" alt=""></p><h2 id="讓伺服器跑起來"><a href="#讓伺服器跑起來" class="headerlink" title="讓伺服器跑起來 !"></a><strong>讓伺服器跑起來 !</strong></h2><p>首先來看看 manage.py 這個檔案<br>manage.py 是 Django 提供的命令列工具，我們稍後會一直跟它打交道<br>詳細的說明可以參考 <a href="https://docs.djangoproject.com/en/2.1/ref/django-admin/" target="_blank" rel="noopener">Django 官網說明</a> 以及 <a href="https://djangogirlstaipei.gitbooks.io/django-girls-taipei-tutorial/django/project_and_app.html" target="_blank" rel="noopener">Django Girls 學習指南</a><br>輸入以下代碼，來跑跑看伺服器吧 ! (記得先將終端機目錄指定到剛剛建立的專案中唷!)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/9mzZp2T.png" alt=""></p><p>成功後會顯示出 <strong>Starting development server at <a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a></strong><br>開啟本地網頁 <a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a> ，即可看到成功頁面<br><img src="https://imgur.com/ctlOnPh.png" alt=""></p><h2 id="來個網頁應用程式吧"><a href="#來個網頁應用程式吧" class="headerlink" title="來個網頁應用程式吧 !"></a><strong>來個網頁應用程式吧 !</strong></h2><p>開始來做個網頁吧<br>首先先來創建個 Application<br>回到 VS Code 輸入以下指令 (可以使用 <strong>Ctrl+C</strong> 讓終端機回到輸入指令的模式)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp yourapplicationname</span><br></pre></td></tr></table></figure></p><p>塔克這邊的例子是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp ApiService</span><br></pre></td></tr></table></figure></p><p>成功後，就可以在介面中看到創建好的 Application<br><img src="https://imgur.com/39s1CBp.png" alt=""></p><p>接著打開 <strong>~Webapi/settings.py</strong><br>調整一下裡面的屬性，讓 Django 管理剛創建的 Application<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Application definition</span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &apos;ApiService&apos;, #加上自己的應用程式，提供給 Django 管理</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><h2 id="HTTP-request-amp-HTTP-response"><a href="#HTTP-request-amp-HTTP-response" class="headerlink" title="HTTP request &amp; HTTP response"></a><strong>HTTP request &amp; HTTP response</strong></h2><p>打開 <strong>~/ApiService/views.py</strong><br>創建一個 <strong>hello_world</strong> 的 Http request<br>呼叫後，會回應 <strong>Hello World!</strong><br>輸入以下代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from django.http import HttpResponse</span><br><span class="line"></span><br><span class="line">def hello_world(request):</span><br><span class="line">    return HttpResponse(&quot;Hello World!&quot;)</span><br></pre></td></tr></table></figure></p><p>接著打開 <strong>~/Webapi/urls.py</strong><br>import 剛剛建立的 function<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from ApiService.views import hello_world</span><br></pre></td></tr></table></figure></p><p>並在 <strong>urlpatterns</strong> 下加入路徑<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(&apos;hello&apos;, hello_world),</span><br></pre></td></tr></table></figure></p><p>代碼看起來會像這樣<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from django.contrib import admin</span><br><span class="line">from django.urls import path</span><br><span class="line">from ApiService import hello_world</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(&apos;admin/&apos;, admin.site.urls),</span><br><span class="line">    path(&apos;hello&apos;, hello_world),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>接著在啟動伺服器<br>網址輸入 <strong><a href="http://127.0.0.1:8000/hello" target="_blank" rel="noopener">http://127.0.0.1:8000/hello</a></strong><br>就可以看到回覆的 <strong>Hello World!</strong><br><img src="https://imgur.com/VyPO03W.png" alt=""></p><p><em>額外小補充<br>在 <strong>path(‘hello’, hello_world)</strong> 路徑設定中<br>如果要對其路徑進行正則表達式<br>如 <strong>r’^hello/$’, hello_world</strong><br>那麼就要先 import <strong>re_path</strong><br><strong>from django.urls import re_path</strong><br>在將 <strong>path</strong> 替換成 <strong>re_path</strong><br><strong>re_path(r’^hello/$’, hello_world)</strong></em></p><h2 id="建立網頁"><a href="#建立網頁" class="headerlink" title="建立網頁"></a><strong>建立網頁</strong></h2><p>在我們專案中，先建立一個放置網頁的資料夾 <strong>templates</strong><br>並在此資料夾中，新增一個 <strong>hello_world.html</strong><br><img src="https://imgur.com/MrgCC0S.png" alt=""></p><p>在 hello_world.html 中，輸入以下代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- hello_world.html --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;I come from template!!&lt;/title&gt;</span><br><span class="line">        &lt;style&gt;</span><br><span class="line">            body &#123;</span><br><span class="line">               background-color: lightyellow;</span><br><span class="line">            &#125;</span><br><span class="line">            em &#123;</span><br><span class="line">                color: LightSeaGreen;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;Hello World!&lt;/h1&gt;</span><br><span class="line">        &lt;em&gt;&#123;&#123; current_time &#125;&#125;&lt;/em&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>接著回到 <strong>~/ApiService/views.py</strong> 中，修改一下代碼，內容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from django.shortcuts import render</span><br><span class="line">from django.http import HttpResponse</span><br><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line">def hello_world(request):</span><br><span class="line">    return render(request, &apos;hello_world.html&apos;, &#123;</span><br><span class="line">        &apos;current_time&apos;: str(datetime.now()),</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></p><p>接著再回到 <strong>~Webapi/settings.py</strong>，調整 <strong>TEMPLATES</strong> 設定<br>修改一下 <strong>DIRS</strong>，內容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;DIRS&apos;: [os.path.join(BASE_DIR, &apos;templates&apos;).replace(&apos;\\&apos;, &apos;/&apos;)],</span><br></pre></td></tr></table></figure></p><p>重新啟動伺服器後，就可以看到網頁不再是單純的文字回覆囉 !<br><img src="https://imgur.com/Bxv1zja.png" alt=""></p><p><strong>參考</strong><br><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code 官網</a><br><a href="http://asika.windspeaker.co/post/3500-powershell-remotesigned" target="_blank" rel="noopener">PowerShell 執行出錯</a><br><a href="https://docs.djangoproject.com/en/2.1/" target="_blank" rel="noopener">Django 官網文件</a><br><a href="https://developer.mozilla.org/zh-TW/docs/Learn/Server-side/Django" target="_blank" rel="noopener">Django 網站框架 (Python)</a><br><a href="https://djangogirlstaipei.gitbooks.io/django-girls-taipei-tutorial/" target="_blank" rel="noopener">Django Girls 學習指南</a></p>]]></content>
      
      
      <categories>
          
          <category> 學習日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python 隨手筆記 - 安裝Django</title>
      <link href="/2018/11/26/Python-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E5%AE%89%E8%A3%9DDjango/"/>
      <url>/2018/11/26/Python-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E5%AE%89%E8%A3%9DDjango/</url>
      
        <content type="html"><![CDATA[<h2 id="安裝-Django"><a href="#安裝-Django" class="headerlink" title="安裝 Django"></a><strong>安裝 Django</strong></h2><p>在開始 Python 之旅前<br>咱們來安裝 <strong>Django</strong> 作為 Python 的 web 框架<br>(有裝 <strong>VS Code</strong> 的朋友，可以直接到 <a href="http://happyhand.github.io/2018/11/28/Python-隨手筆記-用-Django-作個網頁吧/">Python 隨手筆記 - 用 Django 作個網頁吧 !</a> 進行相同步驟)</p><h4 id="建立-Django-資料夾"><a href="#建立-Django-資料夾" class="headerlink" title="建立 Django 資料夾"></a><strong>建立 Django 資料夾</strong></h4><p>在開始一連串的安裝程序之前<br>我們先建立一個待會要安裝 Django 的資料夾<br>塔克用的是 <strong>D:\WebProject\AppWeb\Django</strong><br>待會會以這個路徑為例子</p><h4 id="建立虛擬環境"><a href="#建立虛擬環境" class="headerlink" title="建立虛擬環境"></a><strong>建立虛擬環境</strong></h4><p>我們會建立一個虛擬環境供 Django 使用<br>打開命令提示字元 (cmd)，先將路徑指定到剛剛建立的 Django 資料夾<br>接著輸入建立虛擬環境的指令 (python -m venv 後面打上要建立的虛擬環境名稱)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv yourvirtualenvironmentname</span><br></pre></td></tr></table></figure></p><p>塔克這邊的例子是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv venv</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/5H40UnX.png" alt=""></p><p>成功後就會看到原本 Django 資料夾中，多了一個 venv 資料夾<br><img src="https://imgur.com/SlDWDuT.png" alt=""></p><p>接著我們執行 <strong>~/venv/Scripts/activate</strong>，以進入到虛擬環境中<br><img src="https://imgur.com/qYRZHqr.png" alt=""></p><p>成功後，會如下圖顯示 (前方會掛載自訂的虛擬環境名稱，如塔克所自訂的 <strong>venv</strong>)<br><img src="https://imgur.com/eI6EgHY.png" alt=""></p><h4 id="安裝-Django-1"><a href="#安裝-Django-1" class="headerlink" title="安裝 Django"></a><strong>安裝 Django</strong></h4><p>接下來要開始安裝 <strong>Django</strong><br>這邊塔克會先示範一個錯誤的情況<br>避免大家遇到跟我一樣的問題 Or2<br>首先輸入代碼，安裝 <strong>Django</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django==1.6.6</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/QqKBumK.png" alt=""></p><p>(圖中有提示要升級 <strong>pip</strong>，塔克這邊有跟著執行升級)<br>完成後，咱們來創建專案 !<br>輸入以下代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ~\venv\Scripts\django-admin.py startproject yourprojectname</span><br></pre></td></tr></table></figure></p><p>塔克這邊的例子是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python venv\Scripts\django-admin.py startproject Webapi</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/dqi8lB5.png" alt=""></p><p>噹噹 !! 發生錯誤了 !!<br><strong>AttributeError: module ‘html.parser’ has no attribute ‘HTMLParseError’</strong><br>後來 Google 了一下，發現是版本過舊所致<br>所以建議大家安裝前記得先到 <a href="https://www.djangoproject.com/" target="_blank" rel="noopener">Django 官網</a> 中看一下最新版本是多少 (會不會太晚講了 QAQ”aaa)<br>修改一下原本安裝得代碼，改成最新版本<br>(這邊大家可以放心，Django 會先自動移除舊版本後，再安裝新版本)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django==2.1.3</span><br></pre></td></tr></table></figure></p><p>安裝好後，咱們重新創建專案 !<br>重新輸入剛剛得代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ~\venv\Scripts\django-admin.py startproject yourprojectname</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/EJuVs2t.png" alt=""></p><p>成功後，就會在 Django 資料夾中看見專案<br><img src="https://imgur.com/q4shGGR.png" alt=""></p><p><strong>參考</strong><br><a href="https://carolhsu.gitbooks.io/django-girls-tutorial-traditional-chiness/content/index.html" target="_blank" rel="noopener">Django Girls 教學</a></p>]]></content>
      
      
      <categories>
          
          <category> 學習日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python 隨手筆記 - 安裝Python</title>
      <link href="/2018/11/26/Python-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E5%AE%89%E8%A3%9DPython/"/>
      <url>/2018/11/26/Python-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E5%AE%89%E8%A3%9DPython/</url>
      
        <content type="html"><![CDATA[<h2 id="安裝-Python"><a href="#安裝-Python" class="headerlink" title="安裝 Python"></a><strong>安裝 Python</strong></h2><p>於 <a href="https://www.python.org/downloads/" target="_blank" rel="noopener">Python官網下載頁</a> 下載 Python 套件<br><img src="https://imgur.com/hQqjVob.png" alt=""></p><p>安裝套件，這邊要注意一下<br>請將 <strong>“Add Python 3.7 to Path”</strong> 選項勾起，讓系統設定好環境變數<br>(因為安裝軟體預設是沒勾起，塔克當初忽略它，結果一直安裝不好，搞好久 Or2)<br><img src="https://imgur.com/UAFFtpR.png" alt=""></p><p>安裝好後，請打開命令提示字元 (cmd)，輸入以下指令，測試有沒有成功安裝版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/BXKTrIk.png" alt=""></p><h2 id="跟世界說聲-Hello"><a href="#跟世界說聲-Hello" class="headerlink" title="跟世界說聲 Hello"></a><strong>跟世界說聲 Hello</strong></h2><p>利用筆記本新創一個檔案 <strong>hello.py</strong> (記得另存新檔成 .py 檔案唷)<br><img src="https://imgur.com/dEiPJ2p.png" alt=""></p><p>永遠都要先跟世界說 Hello 唷 😃<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;Hello World !&quot;);</span><br></pre></td></tr></table></figure></p><p>打開命令提示字元 (cmd)，輸入以下指令，呼叫剛剛的檔案，跟世界說聲 Hello !<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python hello.py</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/yNztjar.png" alt=""></p><p><em>額外小補充<br>安裝完 Python 後，記得要重開機，環境變數才會生效唷 !<br>(當初塔克又卡在這邊很久 Or2)</em></p>]]></content>
      
      
      <categories>
          
          <category> 學習日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>asp.net MVC 隨手筆記 - 使用 Open Iconic 加入圖示</title>
      <link href="/2018/11/22/asp-net-MVC-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E4%BD%BF%E7%94%A8-Open-Iconic-%E5%8A%A0%E5%85%A5%E5%9C%96%E7%A4%BA/"/>
      <url>/2018/11/22/asp-net-MVC-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E4%BD%BF%E7%94%A8-Open-Iconic-%E5%8A%A0%E5%85%A5%E5%9C%96%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="使用-Open-Iconic-添加網頁圖示"><a href="#使用-Open-Iconic-添加網頁圖示" class="headerlink" title="使用 Open Iconic 添加網頁圖示"></a><strong>使用 Open Iconic 添加網頁圖示</strong></h2><p>於 <a href="https://useiconic.com/open/" target="_blank" rel="noopener">OPENICONIC 官網</a> 下載圖示壓縮檔<br><img src="https://imgur.com/aSlElQC.png" alt=""></p><p>下載並解壓縮後，於 ~/open-iconic-master/font/<strong>css</strong> 中提取所需的 css 檔案<br>並將其檔案放置 asp.net MVC <strong>~/Content</strong> 資料夾中 (塔克這邊提取的是<strong>open-iconic-bootstrap.min.css</strong>)<br>以及 ~/open-iconic-master/font/<strong>fonts</strong> 中提取所有檔案<br>並將其檔案放置 asp.net MVC <strong>~/fonts</strong> 資料夾中<br><img src="https://imgur.com/z657352.png" alt=""></p><p>於 <a href="https://useiconic.com/open/" target="_blank" rel="noopener">OPENICONIC 官網</a> 挑選要加入的圖示<br>並點擊圖示以彈跳出代碼範例<br><img src="https://imgur.com/3CVUdtd.png" alt=""></p><p>因為塔克提取的是 <strong>bootstrap.min.css</strong><br>所以採用 <strong>Bootstrap Icon Font</strong> 代碼<br>並於要顯示的 html 加入代碼 (這邊以 Home Page 為例)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@&#123;</span><br><span class="line">    ViewBag.Title = &quot;Home Page&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;span&gt; Hello World&lt;/span&gt;</span><br><span class="line">    &lt;span class=&quot;oi oi-heart&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>即可顯示圖示<br><img src="https://imgur.com/yzSoLCy.png" alt=""></p><p><strong>參考</strong><br><a href="https://useiconic.com/open/" target="_blank" rel="noopener">OPENICONIC 官網</a></p>]]></content>
      
      
      <categories>
          
          <category> 學習日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> asp.net MVC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>遊戲藍圖-LifeOrDie (1)</title>
      <link href="/2018/11/21/%E9%81%8A%E6%88%B2%E8%97%8D%E5%9C%96-LifeOrDie-1/"/>
      <url>/2018/11/21/%E9%81%8A%E6%88%B2%E8%97%8D%E5%9C%96-LifeOrDie-1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 創作日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LifeOrDie </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>asp.net MVC 隨手筆記 - Styles.Render 加入 JS</title>
      <link href="/2018/11/21/asp.net%20MVC%20%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98%20-%20Styles.Render%20%E5%8A%A0%E5%85%A5%20JS/"/>
      <url>/2018/11/21/asp.net%20MVC%20%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98%20-%20Styles.Render%20%E5%8A%A0%E5%85%A5%20JS/</url>
      
        <content type="html"><![CDATA[<h2 id="使用-Styles-Render-include-JS、CSS"><a href="#使用-Styles-Render-include-JS、CSS" class="headerlink" title="使用 Styles.Render include JS、CSS"></a><strong>使用 Styles.Render include JS、CSS</strong></h2><h3 id="include-JS、CSS"><a href="#include-JS、CSS" class="headerlink" title="include JS、CSS"></a><strong>include JS、CSS</strong></h3><p>在 AppWeb/<strong>BundleConfig</strong> RegisterBundles function 中輸入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bundles.Add(new ScriptBundle(&quot;~/bundles/typename&quot;).Include(&quot;~/Scripts/filename&quot;));</span><br></pre></td></tr></table></figure></p><p>並在指定的 cshtml 中，使用 @Scripts.Render 即可使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@Scripts.Render(&quot;~/bundles/typename&quot;)</span><br></pre></td></tr></table></figure></p><p>以新增的 vue.js 為例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bundles.Add(new ScriptBundle(&quot;~/bundles/vue&quot;).Include(&quot;~/Scripts/vue.js&quot;));</span><br></pre></td></tr></table></figure></p><p>並於 Views/<strong>_Layout.cshtml</strong> 中加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@Scripts.Render(&quot;~/bundles/vue&quot;)</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/hs2deeO.png" alt=""></p><p><em>額外小補充<br>可使用 {version}、** </em>等模糊查詢功能*</p><h3 id="include-指定資料夾下的所有-JS、CSS"><a href="#include-指定資料夾下的所有-JS、CSS" class="headerlink" title="include 指定資料夾下的所有 JS、CSS"></a><strong>include 指定資料夾下的所有 JS、CSS</strong></h3><p>在 AppWeb/<strong>BundleConfig</strong> RegisterBundles function 中輸入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bundles.Add(newScriptBundle(&quot;~/bundles/typename&quot;).IncludeDirectory(&quot;~/Scripts/directoryname&quot;, &quot;*.js&quot;, true));</span><br></pre></td></tr></table></figure></p><p>舉個例子 &gt;&gt;&gt;<br>新增 JS 檔案<br><img src="https://imgur.com/itt99A8.png" alt=""></p><p>輸入代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bundles.Add(newScriptBundle(&quot;~/bundles/AllJS&quot;).IncludeDirectory(&quot;~/Scripts/MainJS&quot;, &quot;*.js&quot;, true));</span><br></pre></td></tr></table></figure></p><p>並在指定的 cshtml 中，使用 @Scripts.Render 即可使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@Scripts.Render(&quot;~/bundles/AllJS&quot;)</span><br></pre></td></tr></table></figure></p><p><img src="https://imgur.com/Q3YKaV7.png" alt=""></p><p><em>額外小補充<br>.js 檔案無法從 Views 資料夾下作引用<br>一定要放在 Scripts 資料夾下才可以</em></p>]]></content>
      
      
      <categories>
          
          <category> 學習日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> asp.net MVC </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
