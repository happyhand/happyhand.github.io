<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Python 隨手筆記 - 用 Django 作個網頁吧 !]]></title>
    <url>%2F2018%2F11%2F28%2FPython-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E7%94%A8-Django-%E4%BD%9C%E5%80%8B%E7%B6%B2%E9%A0%81%E5%90%A7%2F</url>
    <content type="text"><![CDATA[工欲善其事，必先利其器 !在開始建立個人網頁前我們先來找個合適的 IDE or 文本編輯器來編譯我們的專案(專案將會延續 Python 隨手筆記 - 安裝Django 的設定作說明) 來試試 VS Code在工具方面，塔克是使用 VS Code 來做為 Python 的文本編輯器有興趣的朋友可以參考一下這邊會再重新複習上一個章節 Python 隨手筆記 - 安裝Django 所進行的步驟已經熟悉的朋友可以直接跳過，直接往下一個步驟 讓伺服器跑起來 ! 進行 安裝 VS Code首先先到 VS Code 官網 安裝 VS Code 接著以 VS Code 開啟事先建立好的 Django 資料夾 在執行 Python 相關動作前，我們先來安裝 Python 套件 創建虛擬環境在 VS Code 環境中打開終端機 (快捷鍵是 Ctrl+`)一樣輸入創建虛擬環境的代碼1python -m venv yourvirtualenvironmentname 塔克這邊的例子是1python -m venv venv 接著就會看到原本 Django 資料夾中，多了一個 venv 資料夾 接著我們執行 ~venv/Scripts/activate，以進入到虛擬環境中這邊塔克有遇到 終端機 powershell 無法執行的問題 (如圖中的紅色提示) 此時我們打開 powershell (記得使用管理員模式)輸入以下指令，並選擇 Y 即可正常執行 ~venv/Scripts/activate 指令1Set-ExecutionPolicy RemoteSigned 成功後，前方會掛載自訂的虛擬環境名稱，如塔克所自訂的 venv 安裝 Django 並創建專案接著安裝 Django (記得輸入最新版本唷)1pip install django==2.1.3 完成後，輸入以下代碼創建專案1python ~venv\Scripts\django-admin.py startproject yourprojectname 塔克這邊的例子是1python venv\Scripts\django-admin.py startproject Webapi 讓伺服器跑起來 !首先來看看 manage.py 這個檔案manage.py 是 Django 提供的命令列工具，我們稍後會一直跟它打交道詳細的說明可以參考 Django 官網說明 以及 Django Girls 學習指南輸入以下代碼，來跑跑看伺服器吧 ! (記得先將終端機目錄指定到剛剛建立的專案中唷!)1python manage.py runserver 成功後會顯示出 Starting development server at http://127.0.0.1:8000/開啟本地網頁 http://127.0.0.1:8000/ ，即可看到成功頁面 來個網頁應用程式吧 !開始來做個網頁吧首先先來創建個 Application回到 VS Code 輸入以下指令 (可以使用 Ctrl+C 讓終端機回到輸入指令的模式)1python manage.py startapp yourapplicationname 塔克這邊的例子是1python manage.py startapp ApiService 成功後，就可以在介面中看到創建好的 Application 接著打開 ~Webapi/settings.py調整一下裡面的屬性，讓 Django 管理剛創建的 Application1234567891011# Application definitionINSTALLED_APPS = ( &apos;django.contrib.admin&apos;, &apos;django.contrib.auth&apos;, &apos;django.contrib.contenttypes&apos;, &apos;django.contrib.sessions&apos;, &apos;django.contrib.messages&apos;, &apos;django.contrib.staticfiles&apos;, &apos;ApiService&apos;, #加上自己的應用程式，提供給 Django 管理) HTTP request &amp; HTTP response打開 ~/ApiService/views.py創建一個 hello_world 的 Http request呼叫後，會回應 Hello World!輸入以下代碼1234from django.http import HttpResponsedef hello_world(request): return HttpResponse(&quot;Hello World!&quot;) 接著打開 ~/Webapi/urls.pyimport 剛剛建立的 function1from ApiService.views import hello_world 並在 urlpatterns 下加入路徑1path(&apos;hello&apos;, hello_world), 代碼看起來會像這樣12345678from django.contrib import adminfrom django.urls import pathfrom ApiService import hello_worldurlpatterns = [ path(&apos;admin/&apos;, admin.site.urls), path(&apos;hello&apos;, hello_world),] 接著在啟動伺服器網址輸入 http://127.0.0.1:8000/hello就可以看到回覆的 Hello World! 額外小補充在 path(‘hello’, hello_world) 路徑設定中如果要對其路徑進行正則表達式如 r’^hello/$’, hello_world那麼就要先 import re_pathfrom django.urls import re_path在將 path 替換成 re_pathre_path(r’^hello/$’, hello_world) 建立網頁在我們專案中，先建立一個放置網頁的資料夾 templates並在此資料夾中，新增一個 hello_world.html 在 hello_world.html 中，輸入以下代碼1234567891011121314151617181920&lt;!-- hello_world.html --&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;I come from template!!&lt;/title&gt; &lt;style&gt; body &#123; background-color: lightyellow; &#125; em &#123; color: LightSeaGreen; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Hello World!&lt;/h1&gt; &lt;em&gt;&#123;&#123; current_time &#125;&#125;&lt;/em&gt; &lt;/body&gt;&lt;/html&gt; 接著回到 ~/ApiService/views.py 中，修改一下代碼，內容如下12345678from django.shortcuts import renderfrom django.http import HttpResponsefrom datetime import datetimedef hello_world(request): return render(request, &apos;hello_world.html&apos;, &#123; &apos;current_time&apos;: str(datetime.now()), &#125;) 接著再回到 ~Webapi/settings.py，調整 TEMPLATES 設定修改一下 DIRS，內容如下1&apos;DIRS&apos;: [os.path.join(BASE_DIR, &apos;templates&apos;).replace(&apos;\\&apos;, &apos;/&apos;)], 重新啟動伺服器後，就可以看到網頁不再是單純的文字回覆囉 ! 參考VS Code 官網PowerShell 執行出錯Django 官網文件Django 網站框架 (Python)Django Girls 學習指南]]></content>
      <categories>
        <category>學習日誌</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 隨手筆記 - 安裝Django]]></title>
    <url>%2F2018%2F11%2F26%2FPython-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E5%AE%89%E8%A3%9DDjango%2F</url>
    <content type="text"><![CDATA[安裝 Django在開始 Python 之旅前咱們來安裝 Django 作為 Python 的 web 框架 建立 Django 資料夾在開始一連串的安裝程序之前我們先建立一個待會要安裝 Django 的資料夾塔克用的是 D:\WebProject\AppWeb\Django待會會以這個路徑為例子 建立虛擬環境我們會建立一個虛擬環境供 Django 使用打開命令提示字元 (cmd)，先將路徑指定到剛剛建立的 Django 資料夾接著輸入建立虛擬環境的指令 (python -m venv 後面打上要建立的虛擬環境名稱)1python -m venv yourvirtualenvironmentname 塔克這邊的例子是1python -m venv venv 成功後就會看到原本 Django 資料夾中，多了一個 venv 資料夾 接著我們執行 ~venv/Scripts/activate，以進入到虛擬環境中 成功後，會如下圖顯示 (前方會掛載自訂的虛擬環境名稱，如塔克所自訂的 venv) 安裝 Django接下來要開始安裝 Django這邊塔克會先示範一個錯誤的情況避免大家遇到跟我一樣的問題 Or2首先輸入代碼，安裝 Django1pip install django==1.6.6 (圖中有提示要升級 pip，塔克這邊有跟著執行升級)完成後，咱們來創建專案 !輸入以下代碼1python ~venv\Scripts\django-admin.py startproject yourprojectname 塔克這邊的例子是1python venv\Scripts\django-admin.py startproject Webapi 噹噹 !! 發生錯誤了 !!AttributeError: module ‘html.parser’ has no attribute ‘HTMLParseError’後來 Google 了一下，發現是版本過舊所致所以建議大家安裝前記得先到 Django 官網 中看一下最新版本是多少 (會不會太晚講了 QAQ”aaa)修改一下原本安裝得代碼，改成最新版本(這邊大家可以放心，Django 會先自動移除舊版本後，再安裝新版本)1pip install django==2.1.3 安裝好後，咱們重新創建專案 !重新輸入剛剛得代碼1python ~venv\Scripts\django-admin.py startproject yourprojectname 成功後，就會在 Django 資料夾中看見專案 參考Django Girls 教學]]></content>
      <categories>
        <category>學習日誌</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 隨手筆記 - 安裝Python]]></title>
    <url>%2F2018%2F11%2F26%2FPython-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E5%AE%89%E8%A3%9DPython%2F</url>
    <content type="text"><![CDATA[安裝 Python於 Python官網下載頁 下載 Python 套件 安裝套件，這邊要注意一下請將 “Add Python 3.7 to Path” 選項勾起，讓系統設定好環境變數(因為安裝軟體預設是沒勾起，塔克當初忽略它，結果一直安裝不好，搞好久 Or2) 安裝好後，請打開命令提示字元 (cmd)，輸入以下指令，測試有沒有成功安裝版本1python --version 跟世界說聲 Hello利用筆記本新創一個檔案 hello.py (記得另存新檔成 .py 檔案唷) 永遠都要先跟世界說 Hello 唷 😃1print(&quot;Hello World !&quot;); 打開命令提示字元 (cmd)，輸入以下指令，呼叫剛剛的檔案，跟世界說聲 Hello !1python hello.py 額外小補充安裝完 Python 後，記得要重開機，環境變數才會生效唷 !(當初塔克又卡在這邊很久 Or2)]]></content>
      <categories>
        <category>學習日誌</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[asp.net MVC 隨手筆記 - 使用 Open Iconic 加入圖示]]></title>
    <url>%2F2018%2F11%2F22%2Fasp-net-MVC-%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98-%E4%BD%BF%E7%94%A8-Open-Iconic-%E5%8A%A0%E5%85%A5%E5%9C%96%E7%A4%BA%2F</url>
    <content type="text"><![CDATA[使用 Open Iconic 添加網頁圖示於 OPENICONIC 官網 下載圖示壓縮檔 下載並解壓縮後，於 ~/open-iconic-master/font/css 中提取所需的 css 檔案並將其檔案放置 asp.net MVC ~/Content 資料夾中 (塔克這邊提取的是open-iconic-bootstrap.min.css)以及 ~/open-iconic-master/font/fonts 中提取所有檔案並將其檔案放置 asp.net MVC ~/fonts 資料夾中 於 OPENICONIC 官網 挑選要加入的圖示並點擊圖示以彈跳出代碼範例 因為塔克提取的是 bootstrap.min.css所以採用 Bootstrap Icon Font 代碼並於要顯示的 html 加入代碼 (這邊以 Home Page 為例)12345678@&#123; ViewBag.Title = &quot;Home Page&quot;;&#125;&lt;div&gt; &lt;span&gt; Hello World&lt;/span&gt; &lt;span class=&quot;oi oi-heart&quot;&gt;&lt;/span&gt;&lt;/div&gt; 即可顯示圖示 參考OPENICONIC 官網]]></content>
      <categories>
        <category>學習日誌</category>
      </categories>
      <tags>
        <tag>asp.new MVC</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[遊戲藍圖-LifeOrDie (1)]]></title>
    <url>%2F2018%2F11%2F21%2F%E9%81%8A%E6%88%B2%E8%97%8D%E5%9C%96-LifeOrDie-1%2F</url>
    <content type="text"></content>
      <categories>
        <category>創作日誌</category>
      </categories>
      <tags>
        <tag>LifeOrDie</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[asp.net MVC 隨手筆記 - Styles.Render 加入 JS]]></title>
    <url>%2F2018%2F11%2F21%2Fasp.net%20MVC%20%E9%9A%A8%E6%89%8B%E7%AD%86%E8%A8%98%20-%20Styles.Render%20%E5%8A%A0%E5%85%A5%20JS%2F</url>
    <content type="text"><![CDATA[使用 Styles.Render include JS、CSSinclude JS、CSS在 AppWeb/BundleConfig RegisterBundles function 中輸入1bundles.Add(new ScriptBundle(&quot;~/bundles/typename&quot;).Include(&quot;~/Scripts/filename&quot;)); 並在指定的 cshtml 中，使用 @Scripts.Render 即可使用1@Scripts.Render(&quot;~/bundles/typename&quot;) 以新增的 vue.js 為例1bundles.Add(new ScriptBundle(&quot;~/bundles/vue&quot;).Include(&quot;~/Scripts/vue.js&quot;)); 並於 Views/_Layout.cshtml 中加入1@Scripts.Render(&quot;~/bundles/vue&quot;) 額外小補充可使用 {version}、** 等模糊查詢功能* include 指定資料夾下的所有 JS、CSS在 AppWeb/BundleConfig RegisterBundles function 中輸入1bundles.Add(newScriptBundle(&quot;~/bundles/typename&quot;).IncludeDirectory(&quot;~/Scripts/directoryname&quot;, &quot;*.js&quot;, true)); 舉個例子 &gt;&gt;&gt;新增 JS 檔案 輸入代碼1bundles.Add(newScriptBundle(&quot;~/bundles/AllJS&quot;).IncludeDirectory(&quot;~/Scripts/MainJS&quot;, &quot;*.js&quot;, true)); 並在指定的 cshtml 中，使用 @Scripts.Render 即可使用1@Scripts.Render(&quot;~/bundles/AllJS&quot;) 額外小補充.js 檔案無法從 Views 資料夾下作引用一定要放在 Scripts 資料夾下才可以]]></content>
      <categories>
        <category>學習日誌</category>
      </categories>
      <tags>
        <tag>asp.new MVC</tag>
      </tags>
  </entry>
</search>
